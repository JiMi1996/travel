package com.wind.service;import com.github.pagehelper.PageHelper;import com.wind.common.Constant;import com.wind.mybatis.mapper.OrderInfoMapper;import com.wind.mybatis.pojo.OrderInfo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.annotation.Order;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import tk.mybatis.mapper.entity.Example;import java.util.List;import java.util.Optional;@Servicepublic class OrderInfoService {    @Autowired    OrderInfoMapper orderInfoMapper;    public Optional<OrderInfo> getEntityByID(int id) {        return Optional.ofNullable(orderInfoMapper.selectByPrimaryKey(id));    }    public Optional<OrderInfo> getEntityByEntity(OrderInfo order){return Optional.ofNullable(orderInfoMapper.selectOne(order));}    public Optional<OrderInfo> getEntityByName(Integer id) {        OrderInfo order = new OrderInfo();        order.setUserid(id);        return Optional.ofNullable(orderInfoMapper.selectOne(order));    }    public List<OrderInfo> getAll(int page) {        PageHelper.startPage(page, Constant.PAGE_SIZE);        return orderInfoMapper.selectAll();    }    public List<OrderInfo> getAll(String type, String value, int page) {        Example example = new Example(OrderInfo.class);        Example.Criteria criteria = example.createCriteria();        criteria.andLike(type, "%" + value + "%");        PageHelper.startPage(page, Constant.PAGE_SIZE);        return orderInfoMapper.selectByExample(example);    }    public int getCount() {        int count = orderInfoMapper.selectCount(new OrderInfo());        return count;    }    public int getCount(String type, String value) {        Example example = new Example(OrderInfo.class);        Example.Criteria criteria = example.createCriteria();        criteria.andLike(type, "%" + value + "%");        int count = orderInfoMapper.selectCountByExample(example);        return count;    }    @Transactional    public boolean addEntity(OrderInfo order) {        return orderInfoMapper.insertUseGeneratedKeys(order) > 0;    }    @Transactional    public boolean modifyEntityById(OrderInfo order) {        return orderInfoMapper.updateByPrimaryKey(order) > 0;    }    @Transactional    public boolean deleteEntityById(int id) {        return orderInfoMapper.deleteByPrimaryKey(id) > 0;    }}